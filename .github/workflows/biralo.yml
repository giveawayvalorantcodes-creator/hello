name: Persistent VPS Backup and Restore

on:
  schedule:
    - cron: '*/15 * * * *'   # Every 15 minutes
  workflow_dispatch:

jobs:
  backup-restore:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      VPS_HOST: ${{ secrets.VPS_HOST }}
      VPS_USER: biralo
      VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
      MYSQL_USER: ptero_user
      MYSQL_PASSWORD: ${{ secrets.PTERO_DB_PASSWORD }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Backup on VPS via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.VPS_HOST }}
          username: ${{ env.VPS_USER }}
          key: ${{ env.VPS_SSH_KEY }}
          script: |
            echo "Starting backup on VPS at $(date)"

            # Create backup folders
            mkdir -p /opt/vps-backup/db /opt/vps-backup/data

            # Dump MySQL database using dedicated user
            mysqldump -u $MYSQL_USER -p"$MYSQL_PASSWORD" panel > /opt/vps-backup/db/panel.sql

            # Backup tailscale state
            sudo cp /var/lib/tailscale/tailscaled.state /opt/vps-backup/data/ || echo "No tailscale state found"

            # Zip backup folder
            zip -r /home/${VPS_USER}/latest-backup.zip /opt/vps-backup

            echo "Backup completed at $(date)"

      - name: Download backup zip from VPS
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ env.VPS_HOST }}
          username: ${{ env.VPS_USER }}
          key: ${{ env.VPS_SSH_KEY }}
          source: /home/${{ env.VPS_USER }}/latest-backup.zip
          target: ./latest-backup.zip

      - name: Upload backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: vps-backup
          path: latest-backup.zip
